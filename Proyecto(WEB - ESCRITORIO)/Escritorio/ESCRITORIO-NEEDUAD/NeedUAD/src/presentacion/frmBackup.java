/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presentacion;
import Config.Conexion;
import java.io.File;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import negocio.*;

/**
 *
 * @author Palbert
 */
public class frmBackup extends javax.swing.JFrame {
    DefaultTableModel modeloTabla = new DefaultTableModel();
    /**
     * Creates new form frmBackup
     */
    public frmBackup() {
        initComponents();
        listarTablasEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        btnBackup = new javax.swing.JButton();
        btnDatosTabla = new javax.swing.JButton();
        REGRESAR = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnBackup.setText("TABLAS");
        btnBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackupActionPerformed(evt);
            }
        });

        btnDatosTabla.setText("DATOS");
        btnDatosTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDatosTablaActionPerformed(evt);
            }
        });

        REGRESAR.setText("Regresar MAIN");
        REGRESAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                REGRESARActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addComponent(REGRESAR)
                .addGap(17, 17, 17))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDatosTabla)
                    .addComponent(btnBackup))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnBackup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDatosTabla)
                .addGap(37, 37, 37)
                .addComponent(REGRESAR)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackupActionPerformed
        realizarTablasBackup();
        
    }//GEN-LAST:event_btnBackupActionPerformed

    private void btnDatosTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDatosTablaActionPerformed
        realizarDatosBackup();
        mostrarAlerta("Script SQL Datos guardado Correctamente");

    }//GEN-LAST:event_btnDatosTablaActionPerformed

    private void REGRESARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_REGRESARActionPerformed
    this.dispose();
    frmPrincipal frmPrincipal = new frmPrincipal();
    frmPrincipal.setVisible(true);
    }//GEN-LAST:event_REGRESARActionPerformed
private void realizarTablasBackup() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar respaldo");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos SQL (*.sql)", "sql"));

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String savePath = selectedFile.getAbsolutePath();

            if (!savePath.endsWith(".sql")) {
                savePath += ".sql";
            }
            
            Conexion conexion = new Conexion();
            clsNBackUp.exportarTablas(conexion, savePath);
             mostrarAlerta("Script SQL Tablas guardado Correctamente\n"+ savePath);
        }
    }
    private void realizarDatosBackup() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar respaldo de datos");
        fileChooser.setFileFilter(new FileNameExtensionFilter("Archivos SQL (*.sql)", "sql"));

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String savePath = selectedFile.getAbsolutePath();

            
            if (!savePath.toLowerCase().endsWith(".sql")) {
                savePath += ".sql";
            }
            
            Conexion conexion = new Conexion();
            clsNBackUp.reemplazarDatosTablas(conexion, savePath);
            System.out.println("Reemplazo de datos exitoso. Guardado en: " + savePath);
            mostrarAlerta("Script SQL Tablas guardado Correctamente\n"+savePath);
        }
    }
           private void mostrarAlerta(String mensaje) {
        JOptionPane.showMessageDialog(this, mensaje, "Alerta", JOptionPane.INFORMATION_MESSAGE);
    }
           
           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmBackup.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmBackup().setVisible(true);
            }
        });
    }
private void listarTablasEnTabla() {
    clsNBackUp backupManager = new clsNBackUp();
    Conexion con = new Conexion();

    modeloTabla.setRowCount(0);

        List<String> nombresTablas = backupManager.listarTablas(con.getConnection());

        for (String tabla : nombresTablas) {
            modeloTabla.addRow(new Object[]{tabla});
        }

    con.closeConnection();
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton REGRESAR;
    private javax.swing.JButton btnBackup;
    private javax.swing.JButton btnDatosTabla;
    private javax.swing.JFileChooser fileChooser;
    // End of variables declaration//GEN-END:variables
}
